openapi: 3.0.0
servers:
  - url: https://api.goweft.com
    description: Production server
  - url: http://localhost:3000
    description: Local server
tags:
  - name: auth
    description: |
      The auth tag is used for endpoints related to authentication and authorization.

  - name: events
    description: |
      The events tag is used for endpoints related to event ingestion.

info:
  title: Weft Event Ingestion API
  version: 2.3.1
  contact:
    name: Weft Finance, Inc
    email: team@goweft.com
    url: https://goweft.com
  description: |
    The Weft Event Ingestion API is a RESTful API that allows you to submit events for processing and storage. The API is designed to be used by Weft customers and partners to submit events from their own applications and systems. The API is also used by Weft's own backend infrastructure to ingest events from various sources.

    The API is secured using the Bearer Authentication scheme with JWT tokens. To obtain a JWT token, please contact Weft at team@goweft.com
paths:
  /refreshToken:
    post:
      tags:
        - events
      operationId: refreshUser
      summary: Refreshes the user's access token
      description: |
        This endpoint is designed to refresh an expired or expiring JWT access token.
        Submit the refresh token in the request body to obtain a new access token.
        Use this new token for subsequent API calls.
        Token is set to expire every hour.
      requestBody:
        description: The body contains the refresh token required to obtain a new access token.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenInput'
      responses:
        '200':
          $ref: '#/components/responses/RefreshToken'
  /events:
    put:
      tags:
        - events
      operationId: sendEvents
      summary: Submit a batch of events for ingestion
      description: Use this endpoint to send an array of events for processing and storage. Make sure to comply with the request schema for each event.
      requestBody:
        $ref: '#/components/requestBodies/Events'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK

components:
  schemas:
    EventInput:
      type: object
      properties:
        name:
          type: string
          description: The distinctive label assigned to an event, serving as a critical identifier for categorizing and pricing events within the system's backend infrastructure.
          example: "api_call"
        
        timestamp:
          type: string
          format: date-time
          description: The temporal marker denoting the exact moment of event occurrence.
          example: "2023-09-13T18:25:43.511Z"
        
        customerAlias:
          type: string
          description: A pseudonymous or otherwise obfuscated identifier uniquely assigned to each customer.
          example: "customer_12345"
        
        data:
          type: object
          description: A schema-less JSON object encapsulating miscellaneous attributes and metrics associated with the event.
          example:
            key1: "processing_duration"
            key2: "api_url"
        
        ref:
          type: string
          description: A universally unique identifier (UUID) or other form of high-entropy string serving as an immutable reference for each event entry.
          example: "4f6cf35x-2c4y-483z-a0a9-158621f77a21"
      
      required:
        - name
        - timestamp
        - customerAlias

    RefreshTokenInput:
      type: object
      properties:
        refreshToken:
          type: string
          description: The refresh token issued previously during the authentication process. It is required to obtain a new access token.
      required:
        - refreshToken

    RefreshTokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

  requestBodies:
    Events:
      required: true
      description: | 
        An array of events following the EventInput schema. This request body should be included in the PUT request to '/events'
        Up to 1000 events or a total payload max size of 256KB
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EventInput'
            example:
              - name: "UserSignup"
                timestamp: "2023-09-13T18:25:43.511Z"
                customerAlias: "customer_12345"
                data:
                  key1: "api_processing_in_milliseconds"
                  key2: "api_url"
                ref: "4f6cf35x-2c4y-483z-a0a9-158621f77a21"

  responses:
    RefreshToken:
      description: response contains a new access token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshTokenResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: This API uses the Bearer Authentication scheme with JWT tokens.
      bearerFormat: JWT
